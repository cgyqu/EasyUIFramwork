<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TongCheng.SOA.Core</name>
    </assembly>
    <members>
        <member name="T:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil">
            <summary>
            序列化工具类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.CheckEntityAttr(System.Object)">
            <summary>
            检测对象声明是否满足
            </summary>
            <param name="entity">实体对象</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.FilterEntity(System.Object)">
            <summary>
            过滤实体内容
            </summary>
            <param name="entity"></param>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.Value">
            <summary>
            值类型
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.Custom">
            <summary>
            自定义类型
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.List">
            <summary>
            泛型List
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.Nullable">
            <summary>
            可空值类型
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.Enum">
            <summary>
            枚举
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.Type">
            <summary>
            Type类型
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.Other">
            <summary>
            其他类型
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerUtil.SerializeType.System">
            <summary>
            系统类型
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Requesting.SOAIoCFactory">
            <summary>
            SOA控制反转工厂类 
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAIoCFactory.GetInterface(System.String)">
            <summary>
            通过配置的<param name="namespaceKey">命名空间key</param>
            获得ISOAInterface实例
            <remarks>
            该方法是安全的，不会抛出异常，
            所有的错误内容均会在最后的流程SOAResponseEntity的Header中给出
            </remarks>
            </summary>
            <param name="namespaceKey">命名空间配置的key</param>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Requesting.ISOARequester">
            <summary>
            SOA请求定义
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.ISOARequester.GetResponse">
            <summary>
            获取响应
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ProtocolVersion">
            <summary>
            SOA标准协议版本
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ProtocolVersion.V201203151422">
            <summary>
            版本形成日期:2012-03-15
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ProtocolVersion.V201204261002">
            <summary>
            版本形成日期:2012-4-26 10:02
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ProtocolVersion.Unidentifiability">
            <summary>
            不可识别版本
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity">
            <summary>
            ESB监控日志
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.#ctor">
            <summary>
            ESB监控日志
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.TransacationId">
            <summary>
            事务ID
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.ProtocolVersion">
            <summary>
            SOA协议版本号
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.AccountID">
            <summary>
            系统帐号ID
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.CoreVersion">
            <summary>
            SOA核心类库版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.EntityName">
            <summary>
            实体名称
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.EntityVersion">
            <summary>
            实体版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.MethodName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.MethodVersion">
            <summary>
            方法版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.RspCode">
            <summary>
            应答编码
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.RspDesc">
            <summary>
            应答描述
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.InputData">
            <summary>
            输入数据
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.BeginTime">
            <summary>
            处理请求的起始时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.EndTime">
            <summary>
            处理请求的结束时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.ValBeginTime">
            <summary>
            验证起始时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.ValEndTime">
            <summary>
            验证结束时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.ReqSentTime">
            <summary>
            请求发送时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.RspRcvdTime">
            <summary>
            应答收到时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.Exception">
            <summary>
            异常及信息
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.ExceptionStack">
            <summary>
            异常堆栈跟踪
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.InnerException">
            <summary>
            内部异常及信息
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.InnerExceptionStack">
            <summary>
            内部异常堆栈跟踪
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.LogPriority">
            <summary>
            监控日志优先级
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.NameSpace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.SrcSrvName">
            <summary>
            发起方机器名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.DstSrvName">
            <summary>
            接收方机器名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.ReqUID">
            <summary>
            请求唯一ID
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.ExceptionType">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity.RequestUrl">
            <summary>
            请求的url地址
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.Filters.SOAFieldsFilter.Check">
            <summary>
            检查对象属性的值是否符合SOAField声明
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.Filters.SOAFieldsFilter.Filter">
            <summary>
            根据SOAField的声明过滤或者修改对象属性的值
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.Convertor">
            <summary>
            类型转换帮助类
            用于转换不明确的类型
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Convertor.ConvertType``1(System.Object)">
            <summary>
            转换类型
            </summary>
            <typeparam name="T">要转换的类型，可以为Nullable的泛型</typeparam>
            <param name="val">要转换的值</param>
            <returns></returns>
            <remarks>
            added by 王纪虎 at 2011-9-14
            </remarks>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Convertor.ConvertType``1(System.Object,``0)">
            <summary>
            转换类型
            </summary>
            <typeparam name="T">要转换的类型，可以为Nullable的泛型</typeparam>
            <param name="val">要转换的值</param>
            <param name="defaultVal">转换失败默认的值</param>
            <returns></returns>
            <remarks>
            added by 王纪虎 at 2011-9-14
            </remarks>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Convertor.ConvertByType(System.Object,System.Type)">
            <summary>
            通过反射获取未知类型时的类型转换
            转换失败返回null
            </summary>
            <param name="val"></param>
            <param name="tp"></param>
            <returns></returns>
            <remarks>
            added by 王纪虎 at 2011-9-18
            </remarks>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Convertor.ValidateType``1(System.String)">
            <summary>
            验证类型
            </summary>
            <typeparam name="T">要验证的类型</typeparam>
            <param name="val">要验证的值</param>
            <returns></returns>
            <remarks>
            added by 王纪虎 at 2011-9-14
            </remarks>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Convertor.TryConvert``1(System.Object,``0@)">
            <summary>
            转换类型，返回是否转换成功
            </summary>
            <typeparam name="T">要转换的类型</typeparam>
            <param name="val">要转换的值</param>
            <param name="returnVal">返回的值</param>
            <returns></returns>
            <remarks>
            added by 王纪虎 at 2011-9-14
            </remarks>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Convertor.ParseDateTime(System.String)">
            <summary>
            将日期和时间的指定字符串表示形式转换为其等效的System.DateTime。
            </summary>
            <param name="strDateTime">日期和时间的指定字符串表示形式</param>
            <returns>日期时间</returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.SOARequestEntity">
            <summary>
            SOA请求实体
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ISOARequestEntity">
            <summary>
            SOA请求实体
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.SOARequestEntity.Header">
            <summary>
            请求报文头
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.SOARequestEntity.Body">
            <summary>
            请求参数实体
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ISOAResponseEntity">
            <summary>
            SOA响应实体
            Body返回IResonseEntity类型
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ISOAResponseEntity.GetBody``1">
            <summary>
            获取<typeparam name="T">传入类型</typeparam>的响应实体
            </summary>
            <typeparam name="T">Body的类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ISOAResponseEntity.GetBody">
            <summary>
            获取响应实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ISOAResponseEntity.GetDynamicBody">
            <summary>
            获取动态类型的响应实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ISOAResponseEntity.GetSOADynamicBody">
            <summary>
            获取动态类型的响应实体
            </summary>
            <returns></returns>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ISOAResponseEntity.Header">
            <summary>
            响应报文头
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ISOAResponseEntity.RequestUrl">
            <summary>
            请求的接口地址
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ISOAResponseEntity.IsRequestSuccess">
            <summary>
            请求成功(包含无结果请求)
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ISOAResponseEntity.RequestTime">
            <summary>
            发送请求时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ISOAResponseEntity.ResponseTime">
            <summary>
            接收响应时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ISOAResponseEntity.BodyType">
            <summary>
            响应实体的类型
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ISOAResponseEntity.TransacationID">
            <summary>
            请求、响应唯一ID
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Config.SOAConfig">
            <summary>
            SOA配置类[单例]
            全局之能存在一个配置
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Config.SOAConfig.GetUrl(System.String)">
            <summary>
            从配置文件中获取Url
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Config.SOAConfig.Configurate(System.IO.FileInfo)">
            <summary>
            读取SOA配置[不传FileInfo默认读取App_Data\\TCConfig\\TongCheng.SOA.Interface.Config]]
            </summary>
            <param name="configFile">配置文件</param>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.Instance">
            <summary>
            获取实例
            </summary>
            <exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException"></exception>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.ProtocolVersion">
            <summary>
            协议版本号
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.AccountID">
            <summary>
            账户ID
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.UrlList">
            <summary>
            接口url
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.RefEntityList">
            <summary>
            引用的Entity列表[动态插入]
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.HttpHost">
            <summary>
            主机头信息
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.PhysicalPath">
            <summary>
            物理目录
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.SOASwitch">
            <summary>
            SOA配置开关
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.IoCConfig">
            <summary>
            IOC配置
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.SOAConfig.ConfigPathDefault">
            <summary>
            配置文件默认位置
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.HttpHelper">
            <summary>
            Http请求帮助类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.HttpHelper.GetResponse(System.String,System.String,System.Int32)">
            <summary>
            POST请求获取结果
            </summary>
            <param name="url">地址</param>
            <param name="data">参数</param>
            <param name="timeout">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.HttpHelper.GetRequest">
            <summary>
            获取请求的内容
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.IRequestEntity">
            <summary>
            请求实体接口定义
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.IRequestEntity.GetUrl">
            <summary>
            读取Url地址
            </summary>
            <returns></returns>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.IRequestEntity.EntityType">
            <summary>
            实体Type类型
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.IRequestEntity.UrlConfig">
            <summary>
            请求的URL
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.IRequestEntity.Namespace">
            <summary>
            请求的Namespace
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.ConfigurationResponseEntity">
            <summary>
            ESB全局配置返回结果集
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.ConfigurationResponseEntity.LogPriorityConfig">
            <summary>
            日志等级标杆
            </summary>   
        </member>
        <member name="T:TongCheng.SOA.Interface.Attributes.SOABusiness">
            <summary>
            声明业务方法
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Interface.Attributes.SOABusiness.#ctor">
            <summary>
            声明业务方法类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Interface.Attributes.SOABusiness.#ctor(System.Type)">
            <summary>
            从handler类中获取实例
            </summary>
            <param name="handlerType"></param>
        </member>
        <member name="P:TongCheng.SOA.Interface.Attributes.SOABusiness.ClassType">
            <summary>
            业务方法类的Type类型
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Respond.RespondBuilder">
            <summary>
            SOA响应内容建造者
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.SOAExceptionType">
            <summary>
            SOA异常分类
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.SOAExceptionType.Unspecified">
            <summary>
            未指定
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.SOAExceptionType.SOA">
            <summary>
            SOA自身异常
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.SOAExceptionType.Provider">
            <summary>
            接口提供方异常
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.SOAExceptionType.Caller">
            <summary>
            调用方异常
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.HandlerUtility">
            <summary>
            Handler一般处理方法
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.HandlerUtility.GetCustomerAttr``1(System.Type)">
            <summary>
            获取自定义Attr
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.HandlerUtility.GetBusinessMethodParamType(System.Type,TongCheng.SOA.Core.Entities.RequestHeaderEntity)">
            <summary>
            取出配置的方法属性
            </summary>
            <param name="businessType"></param>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.HandlerUtility.GetSOARequest(System.Type,TongCheng.SOA.Core.Respond.ISOARespond)">
            <summary>
            获得SOA请求,并以适配方法
            </summary>
            <param name="businessType"></param>
            <param name="soaRespond"> </param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOARequestingFactory.GetRequesting(TongCheng.SOA.Core.Entities.IRequestEntity,TongCheng.SOA.Core.Entities.RequestHeaderEntity)">
            <summary>
            获取SOAReqeusting工厂方法
            </summary>
            <param name="entity">请求实体</param>
            <param name="header">请求头</param>
            <returns></returns>
            <exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">SOA异常</exception>
            <exception cref="T:System.Exception">其他异常</exception>
        </member>
        <member name="T:TongCheng.SOA.Core.Requesting.ISOAMethod">
            <summary>
            IoC获得的方法
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.ISOAMethod.GetRequester(System.String)">
            <summary>
            获取SOA请求类
            传入<param name="param">参数形如：k=v&amp;k=v</param>
            </summary>
            <param name="param">参数形如：k=v&amp;k=v</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.ISOAMethod.GetRequester(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取SOA请求类
            传入k-v<param name="param">参数字典</param>
            </summary>
            <param name="param">参数字典</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.ISOAMethod.GetRequester(TongCheng.SOA.Core.Entities.IRequestEntity)">
            <summary>
            获取SOA请求类
            传入已知类型的<param name="requestObj">请求实体</param>
            </summary>
            <param name="requestObj">请求实体</param>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Interface.Handler.BaseHandler">
            <summary>
            接口Handler基类,实现IHandler
            继承子类仅需声明SOABusiness即可
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Interface.Handler.IHandler">
            <summary>
            HttpHandler抽象接口
            方便以后对BaseHandler添加行为
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Interface.Handler.BaseHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            处理请求
            </summary>
            <param name="context">http上下文</param>
        </member>
        <member name="P:TongCheng.SOA.Interface.Handler.BaseHandler.IsReusable">
            <summary>
            不支持复用
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Respond.ISOARespond.GetRespondContent">
            <summary>
            获取响应内容
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Exceptions.SOAException">
            <summary>
            SOA统一异常处理类
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Exceptions.SOAException._exceptionType">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Exceptions.SOAException.#ctor(System.Enum,System.String)">
            <summary>
            实例化SOA异常
            </summary>
            <param name="rspCode">异常编码</param>
            <param name="message">信息描述</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Exceptions.SOAException.#ctor(System.String)">
            <summary>
            实例化SOA异常[RspCode=4000]
            </summary>
            <param name="message">信息描述</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Exceptions.SOAException.#ctor(System.Enum,System.String,System.Exception)">
            <summary>
            实例化SOA异常
            捕获内部异常
            </summary>
            <param name="rspCode">异常编码</param>
            <param name="message">信息描述</param>
            <param name="inner">内部异常</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Exceptions.SOAException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            序列化的重载
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:TongCheng.SOA.Core.Exceptions.SOAException.RspCode">
            <summary>
            异常编码
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Permission.PermissionRefresh">
            <summary>
            权限刷新
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Permission.PermissionRefresh.Refresh">
            <summary>
            刷新权限缓存
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.StringCompare">
            <summary>
            字符串对比的IEqualityComparer实现，忽略大小写
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ESBActionType">
            <summary>
              ESB方法
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.validate">
            <summary>
            权限验证
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.log">
            <summary>
            记录监控日志
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.config">
            <summary>
            获取配置信息
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.server">
            <summary>
            记录服务端信息
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.client">
            <summary>
            记录客户端信息
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.entity">
            <summary>
            记录实体部署信息
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.exceptionlog">
            <summary>
            记录异常日志
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.datatracker">
            <summary>
            数据追踪
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.logSrv">
            <summary>
            服务端日志
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.InterfaceUrl">
             <summary>
            接口地址
             </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.TestUrl">
            <summary>
            测试地址
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.HandleException">
            <summary>
            处理异常
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ESBActionType.ESBStatus">
            <summary>
            ESB可用状态
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ExceptionSOAResponseEntity">
            <summary>
            SOA响应实体的异常实现
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.SOAResponseEntity">
            <summary>
            SOA请求响应实体
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.PermissionResponseEntity">
            <summary>
            ESB验证接口返回结果集
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.PermissionResponseEntity.IsSuc">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.PermissionResponseEntity.RspCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.PermissionResponseEntity.RspDesc">
            <summary>
            错误描述
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.PermissionResponseEntity.LogPriority">
            <summary>
            监控日志优先级
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.APIServerInfoEntity">
            <summary>
            接口信息日志
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIServerInfoEntity.ComputerName">
            <summary>
            服务端机器名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIServerInfoEntity.HttpHost">
            <summary>
            服务端主机名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIServerInfoEntity.PhysicalPath">
            <summary>
            服务端路径
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIServerInfoEntity.CoreVersion">
            <summary>
            服务端SOA核心类库版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIServerInfoEntity.CoreInterfaceVersion">
            <summary>
            服务端SOA接口类库版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIServerInfoEntity.ServerConfigInfo">
            <summary>
            服务端配置信息
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.BaseRequestEntity">
            <summary>
            实现了IRequestEntity接口的抽象基类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.BaseRequestEntity.GetUrl">
            <summary>
            获取接口URL地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.DataTrack.SOADataContent">
            <summary>
            数据跟踪详情
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DataTrack.SOADataContent.Content">
            <summary>
            数据内容
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DataTrack.SOADataContent.CreationTime">
            <summary>
            插入时间
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.UtilTools">
            <summary>
            一般帮助工具类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.UtilTools.GetParamDictionary(System.String)">
            <summary>
            转换<param name="param">形如k=v&amp;k=v</param>为
            字典
            </summary>
            <param name="param">参数，形如k=v&amp;k=v</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.UtilTools.Base64Encode(System.String)">
            <summary>
            base64格式的编码
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.UtilTools.Base64Decode(System.String)">
            <summary>
            base64格式的解码
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.Serializer">
            <summary>
            序列化
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.ToXml(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            序列化成XML
            </summary>
            <param name="obj">要序列化的对象</param>
            <param name="info">从class递归调用字段时传入</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.GetListObjXml(System.Object)">
            <summary>
            序列化LIST
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.GetValueObjXml(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            序列化值类型,可空值类型,string
            </summary>
            <param name="obj"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.GetCustomObjXml(System.Object,System.Type)">
            <summary>
            序列化自定义类型
            </summary>
            <param name="obj"></param>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.GetFieldAttr(System.Reflection.PropertyInfo)">
            <summary>
            获取FieldAttr
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.IsSystemType(System.String)">
            <summary>
            判断类型是否是系统类型
            </summary>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.ToObject(System.Xml.XmlNode,System.Reflection.PropertyInfo)">
            <summary>
            从xml中获取对象的值
            </summary>
            <param name="node"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.GetValueTypeObj(System.Xml.XmlNode)">
            <summary>
            获取值类型.可空值类型.字符串的值
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.GetCustomObj(System.Xml.XmlNode,System.Reflection.PropertyInfo)">
            <summary>
            获取自定类型的值
            </summary>
            <param name="node"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.GetListObj(System.Xml.XmlNode,System.Reflection.PropertyInfo)">
            <summary>
            反序列化泛型List对象
            </summary>
            <param name="node"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.CheckType(System.Type)">
            <summary>
            检查Type的类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serializer.SetPropertyVal(System.Object,System.Reflection.PropertyInfo,System.Object)">
            <summary>
            设置Property的值
            </summary>
            <param name="obj">property归属Object</param>
            <param name="property">要设置的Property</param>
            <param name="val">值</param>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.Serialization.JsonSerializer">
            <summary>
            序列化为json的工具类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.JsonSerializer.GetJSON(System.Object)">
            <summary>
            序列化为json字符串
            </summary>
            <param name="obj">要序列化的对象</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.JsonSerializer.GetObject``1(System.String)">
            <summary>
            json字符串反序列化为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="jsonString">json字符串</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.JsonSerializer.GetObject(System.String,System.Type)">
            <summary>
            json字符串反序列化为对象
            </summary>
            <param name="jsonString"></param>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.SOAHttp.SOAHttpHelper">
            <summary>
            SOA请求帮助类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.SOAHttp.SOAHttpHelper.GetResposne``1(TongCheng.SOA.Core.Entities.IRequestEntity,TongCheng.SOA.Core.Entities.RequestHeaderEntity)">
            <summary>
            请求接口/获取响应
            </summary>
            <typeparam name="T">应答实体类型</typeparam>
            <param name="entity">请求实体</param>
            <param name="header">请求报文头</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.SOAHttp.SOAHttpHelper.GetResponse(TongCheng.SOA.Core.Entities.IRequestEntity,TongCheng.SOA.Core.Entities.RequestHeaderEntity)">
            <summary>
            请求SOA接口获取响应
            </summary>
            <param name="entity">请求实体</param>
            <param name="header">请求头</param>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Requesting.ISOAInterface">
            <summary>
            通过IoC配置获得的接口
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.ISOAInterface.GetMethod(System.String)">
            <summary>
            通过配置的<param name="methodName">方法名</param>
            获得具体方法实例
            </summary>
            <param name="methodName">方法名</param>
            <returns>ISOAMethod实例</returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAInterfaceImpl.SOAInterface.#ctor(TongCheng.SOA.Core.Config.SOAIoCInterfaceConfig,System.Reflection.Assembly,TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity)">
            <summary>
            实例化SOAInterface
            </summary>
            <param name="interfaceConfig">接口配置实体</param>
            <param name="entityAssembly">实体的程序集</param>
            <param name="log">监控日志</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAInterfaceImpl.SOAInterface.GetMethod(System.String)">
            <summary>
            通过配置的<param name="methodName">方法名</param>
            获得具体方法实例
            </summary>
            <param name="methodName">方法名</param>
            <returns>ISOAMethod实例</returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAInterfaceImpl.SOAInterface.GetMethodConfig(System.String)">
            <summary>
            获取方法配置
            
            </summary>
            <param name="methodName"></param>
            <exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">方法配置异常</exception>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.SOAResponseEntity`1">
            <summary>
            SOA请求响应实体泛型实现
            属性Body的类型为<typeparam name="T">传入的类型</typeparam>
            </summary>
            <typeparam name="T">IResonseEntity的实现类型</typeparam>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.SOAResponseEntity`1.Body">
            <summary>
            泛型响应实体
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.RequestHeaderEntity">
            <summary>
            请求报文头部实体
            实现IHeaderEntity接口
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.IHeaderEntity">
            <summary>
            请求/响应头部接口定义
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.IHeaderEntity.ValideHeader">
            <summary>
            验证报文头
            </summary>
            <exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">验证失败抛出SOA异常</exception>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.IHeaderEntity.Authorization">
            <summary>
            验证权限
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.IHeaderEntity.JSONSerialization">
            <summary>
            序列化为JSON
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.RequestHeaderEntity.#ctor(System.String,System.Int32)">
            <summary>
            实例化请求报文头
            </summary>
            <param name="methodName">方法名</param>
            <param name="methodVersion">方法版本[默认1]</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.RequestHeaderEntity.#ctor">
            <summary>
            实例化请求报文头
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.RequestHeaderEntity.Version">
            <summary>
            协议版本号
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.RequestHeaderEntity.AccountID">
            <summary>
            接入方账号
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.RequestHeaderEntity.MethodName">
            <summary>
            请求方法名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.RequestHeaderEntity.MethodVersion">
            <summary>
            请求方法版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.RequestHeaderEntity.ReqTime">
            <summary>
            请求时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.RequestHeaderEntity.Namespace">
            <summary>
            请求的Namespace
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.RequestHeaderEntity.RequestTimeout">
            <summary>
            请求超时时间(单位毫秒)
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.RequestHeaderEntity.ComputerName">
            <summary>
            请求的机器名
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.IResonseEntity">
            <summary>
            响应实体接口定义
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.IResonseEntity.SetEntity(System.Xml.XmlNode)">
            <summary>
            反序列化为实体
            </summary>
            <param name="nodeBody"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.IResonseEntity.ToXml">
            <summary>
            序列化为xml
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Attributes.SOAEntity">
            <summary>
            SOA实体属性配置
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAEntity.IsCompress">
            <summary>
            是否压缩[默认false]
            true:压缩
            false:不压缩
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAEntity.IsEncrypt">
            <summary>
            是否加密[默认false]
            true:加密
            false:不加密
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAEntity.Encodable">
            <summary>
            是否包含编码字段
            true:包含
            false:不包含 
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.ESBStatusEntity">
            <summary>
            ESB状态
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ESB.ESBStatusEntity.#ctor">
            <summary>
            ESB状态
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.ESBStatusEntity.ESBHandlerStatus">
            <summary>
            ESBhandler的状态
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.ESBStatusEntity.EsbLogHandlerStatus">
            <summary>
            ESBLogHandler的状态
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.ESBStatusEntity.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Entities.ESB.ESBStatusEntity.Status.Enable">
            <summary>
            可用
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Entities.ESB.ESBStatusEntity.Status.Disable">
            <summary>
            停用
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.SOAConst">
            <summary>
            SOA常量定义
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOA_Authorization_Cache_Expire_Minutes">
            <summary>
            权限验证缓存超时
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOA_SERIALIZE_SPLITMARK">
            <summary>
            SOA序列化分隔符
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOA_ESB_URL_NAMESPACE">
            <summary>
            Esb命名空间
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOA_ESB_LOG_URL_NAMESPACE">
            <summary>
            Log命名空间
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOA_CACHE_KEY_CONFIG">
            <summary>
            缓存key用于Config客户端缓存
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOASplitNameSpace">
            <summary>
            命名空间分割
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOAConfigDefaultPath">
            <summary>
            SOA配置默认路径
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOAConfigUrlTempPath">
            <summary>
            SOA配置Url临时缓存地址
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOAConfigPermissionTempPath">
            <summary>
            SOA配置权限临时缓存地址
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOANamespacePrefixContract">
            <summary>
            SOA命名前缀契约
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.SOAConst.SOAProtocolVersionLength">
            <summary>
            SOA协议版本长度
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.Serialization.SerializerType">
            <summary>
            序列化类型
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerType.XML">
            <summary>
            xml
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Utility.Serialization.SerializerType.JSON">
            <summary>
            json
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.SOAAssembly.SOAAssemblyHelper.GetImportNamespaceList">
            <summary>
            获取项目中引用的SOAEntities命名空间的列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Attributes.SOAField">
            <summary>
            实体属性设置
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAField.IsRequisite">
            <summary>
            是否是必要参数
            true:参数比传
            false:参数非比传
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAField.IsCdata">
            <summary>
            是否用Cdata包裹
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAField.Regex">
            <summary>
            正则定义的规则
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAField.RegexDesc">
            <summary>
            正则说明
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAField.MaxLength">
            <summary>
            string最大长度
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAField.UnSaveLog">
             <summary>
            是否保存日志:true值将被清除,false保存
             </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAField.Base64Encode">
            <summary>
            base64编码：true编码，false不编码
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Attributes.SOAAssemblyFlag">
            <summary>
            SOA程序集标示
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAMethodImpl.SOAMethod.#ctor(TongCheng.SOA.Core.Config.SOAIoCMethodConfig,System.Reflection.Assembly,TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity)">
            <summary>
            实例化SOAMethod
            </summary>
            <param name="methodConfig">方法配置</param>
            <param name="entityAssembly">实体的程序集</param>
            <param name="log">日志实体</param>
            <exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">抛出异常</exception>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAMethodImpl.SOAMethod.GetRequester(System.String)">
            <summary>
            获取SOA请求类
            传入<param name="param">参数形如：k=v&amp;k=v</param>
            </summary>
            <param name="param">参数形如：k=v&amp;k=v</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAMethodImpl.SOAMethod.GetRequester(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取SOA请求类
            传入k-v<param name="param">参数字典</param>
            </summary>
            <param name="param">参数字典</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAMethodImpl.SOAMethod.GetRequester(TongCheng.SOA.Core.Entities.IRequestEntity)">
            <summary>
            获取SOA请求类
            传入已知类型的<param name="requestEntity">请求实体</param>
            </summary>
            <param name="requestEntity">请求实体</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAMethodImpl.SOAMethod.SetRequestEntityType">
            <summary>
            通过配置的实体名称获取请求实体的类型
            </summary>
            <returns></returns>
            <exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">查询不到抛出配置错误</exception>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOAMethodImpl.SOAMethod.GetNewInstance">
            <summary>
            创建一个新的请求实体实例
            未捕获异常
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Interface.Attributes.SOAMethod">
            <summary>
            接口方法属性
            <remarks>用于配置方法名和版本</remarks>
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Interface.Attributes.SOAMethod.#ctor(System.String,System.Int32)">
            <summary>
            声明方法的名称和版本
            </summary>
            <param name="name"></param>
            <param name="version"></param>
        </member>
        <member name="P:TongCheng.SOA.Interface.Attributes.SOAMethod.Name">
            <summary>
            方法名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Interface.Attributes.SOAMethod.Version">
            <summary>
            方法版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Interface.Attributes.SOAMethod.MethodKey">
            <summary>
            方法唯一Key
            用于校验方法
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler">
            <summary>
            SOA内部异常处理
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.#ctor(System.Exception)">
            <summary>
            实例化
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.Handle(System.Exception)">
            <summary>
            处理内部异常
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.ToString">
            <summary>
            处理内容
            </summary>
            <returns></returns>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.CoreVersion">
            <summary>
            核心版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.MachineName">
            <summary>
            机器名称
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.Message">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.ExceptionStact">
            <summary>
            异常堆栈
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.InnerMessage">
            <summary>
            内部异常消息
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.SOAInnerExceptionHandler.InnerExceptionStact">
            <summary>
            内部异常堆栈
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.DynamicEntity.DynamicEntityDictionary">
            <summary>
            SOA动态实体实现
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.DynamicEntityDictionary.#ctor">
            <summary>
            SOA动态类型实例化
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.DynamicEntityDictionary.#ctor(System.Func{TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary})">
            <summary>
            SOA动态类型实例化
            通过<param name="dataThunk">委托</param>初始化数据
            </summary>
            <param name="dataThunk">委托方法</param>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.DynamicEntityDictionary.#ctor(TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary)">
            <summary>
            SOA动态类型实例化
            </summary>
            <param name="entityData"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.DynamicEntityDictionary.GetDynamicMemberNames">
            <summary>
             返回所有动态成员的Name的列表
            </summary>
            <returns>动态成员名称的列表</returns>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.DynamicEntityDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary> 
            Provides the implementation of getting a member.  Derived classes can override
            this method to customize behavior.  When not overridden the call site requesting the 
            binder determines the behavior. 
            </summary>
            <param name="binder">The binder provided by the call site.</param> 
            <param name="result">The result of the get operation.</param>
            <returns>true if the operation is complete, false if the call site should determine behavior.</returns>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.DynamicEntityDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary> 
            Provides the implementation of setting a member.  Derived classes can override
            this method to customize behavior.  When not overridden the call site requesting the
            binder determines the behavior.
            </summary> 
            <param name="binder">The binder provided by the call site.</param>
            <param name="value">The value to set.</param> 
            <returns>true if the operation is complete, false if the call site should determine behavior.</returns> 
        </member>
        <member name="P:TongCheng.SOA.Core.DynamicEntity.DynamicEntityDictionary.Item(System.String)">
            <summary>
            通过动态类型的成员名称获取值
            </summary>
            <param name="name">成员的名称</param>
            <returns>该成员的值,key不存在时返回null</returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.SOARoleType">
            <summary>
            SOA角色分类
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.SOARoleType.APIProvider">
            <summary>
             接口提供方
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.SOARoleType.APICaller">
            <summary>
              接口调用方
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.BaseResponseEntity">
            <summary>
            实现了IResonseEntity接口的抽象基类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.BaseResponseEntity.SetEntity(System.Xml.XmlNode)">
            <summary>
            从xml中反序列化实体
            </summary>
            <param name="nodeBody"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.BaseResponseEntity.ToXml">
            <summary>
            序列化成xml
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.DataTrack.SOADataTracker">
            <summary>
            数据跟踪记录
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.DataTrack.SOADataTracker.#ctor(System.String)">
            <summary>
            实例化 SOADataTracker
            </summary>
            <param name="trackerKey">自定义key,长度小于100</param>
        </member>
        <member name="M:TongCheng.SOA.Core.DataTrack.SOADataTracker.AddData(System.String)">
            <summary>
            插入要跟踪的数据
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.DataTrack.SOADataTracker.Record(System.Action{System.String})">
            <summary>
             记录数据追踪日志
            </summary>
            <param name="logAction">自定义记录委托方法</param>
        </member>
        <member name="M:TongCheng.SOA.Core.DataTrack.SOADataTracker.GetAccountConfig">
            <summary>
            从配置文件中读取AccountID
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DataTrack.SOADataTracker.DataList">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DataTrack.SOADataTracker.TrackerKey">
            <summary>
            自定义key
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DataTrack.SOADataTracker.AccountID">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DataTrack.SOADataTracker.CoreVersion">
            <summary>
            核心包版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DataTrack.SOADataTracker.TrackerSwitch">
            <summary>
            数据跟踪开关
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.SOAAssembly.EntityAssembly">
            <summary>
            SOA实体的程序集帮助类
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.SOAAssembly.EntityAssembly.Instance">
            <summary>
            获取实例
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Attributes.SOAResponseCode">
            <summary>
            ResponseCode相关属性声明
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAResponseCode.Start">
            <summary>
            RspCode开头的数字
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Attributes.SOAResponseCode.Name">
            <summary>
            缩写的名称
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.HttpRequesting.BaseSOAHttpRequesting.GetResponse">
            <summary>
            获取响应
            </summary>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.HttpRequesting.BaseSOAHttpRequesting.GetLogRequestingData">
            <summary>
            获取记录日志用的请求数据
            </summary>
            <returns></returns>
        </member>
        <member name="P:TongCheng.SOA.Core.Requesting.HttpRequesting.BaseSOAHttpRequesting.RequestingTimeout">
            <summary>
            请求超时时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Requesting.HttpRequesting.BaseSOAHttpRequesting.RequestingData">
            <summary>
            请求数据
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Requesting.HttpRequesting.BaseSOAHttpRequesting.RequestingUrl">
            <summary>
            请求地址
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.EntityDeploymentInfoEntity">
            <summary>
            接口信息日志
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.EntityDeploymentInfoEntity.ComputerName">
            <summary>
            实体部署机器名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.EntityDeploymentInfoEntity.HttpHost">
            <summary>
            实体部署主机名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.EntityDeploymentInfoEntity.PhysicalPath">
            <summary>
            实体部署路径
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.EntityDeploymentInfoEntity.EntityNamespace">
            <summary>
            实体名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.EntityDeploymentInfoEntity.EntityVersion">
            <summary>
            实体版本
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ESB.APIClientInfoEntity">
            <summary>
            接口信息日志
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIClientInfoEntity.ComputerName">
            <summary>
            客户端机器名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIClientInfoEntity.HttpHost">
            <summary>
            客户端主机名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIClientInfoEntity.PhysicalPath">
            <summary>
            客户端路径
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIClientInfoEntity.CoreVersion">
            <summary>
            客户端SOA核心类库版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIClientInfoEntity.ClientConfigInfo">
            <summary>
            客户端配置信息
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIClientInfoEntity.ItemId">
            <summary>
            记录ID
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ESB.APIClientInfoEntity.AccountID">
            <summary>
            账户ID
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Config.SOASwitchConfig">
            <summary>
            SOA开关集合
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Config.SOAConfigurator">
            <summary>
            读取SOA的配置
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Config.SOAConfigurator.Configurate(System.IO.FileInfo)">
            <summary>
            读取SOA配置[不传FileInfo默认读取App_Data\\TCConfig\\TongCheng.SOA.Interface.Config]]
            </summary>
            <param name="configFile">配置文件</param>
        </member>
        <member name="T:TongCheng.SOA.Interface.Config.InterfaceConfigurator">
            <summary>
            读取SOA的配置
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Interface.Config.InterfaceConfigurator.Configurate(System.IO.FileInfo)">
            <summary>
            读取SOA配置
            </summary>
            <param name="configFile">配置文件</param>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode">
            <summary>
            响应代码
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Enums.ResponseCode.GetRspCode(System.Enum)">
            <summary>
            获取ResponseCode
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.Success">
            <summary>
            请求成功
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.Success.C0000">
            <summary>
            请求处理成功
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.Success.C0001">
            <summary>
            请求处理成功[无预期结果]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.ParamError">
            <summary>
            参数错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ParamError.C1000">
            <summary>
            参数错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ParamError.C1001">
            <summary>
            参数错误[缺少参数]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ParamError.C1002">
            <summary>
            参数错误[类型错误]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ParamError.C1003">
            <summary>
            参数错误[范围错误]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.DataError">
            <summary>
            数据错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.DataError.C2000">
            <summary>
            数据错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.DataError.C2001">
            <summary>
            连接数据库失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.DataError.C2002">
            <summary>
            添加失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.DataError.C2003">
            <summary>
            查询失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.DataError.C2004">
            <summary>
            更新失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.DataError.C2005">
            <summary>
            删除失败
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.NetworkError">
            <summary>
            网络错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.NetworkError.C3000">
            <summary>
            网络错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.NetworkError.C3001">
            <summary>
            网络连接失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.NetworkError.C3002">
            <summary>
            拒绝访问[未授权] 
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.NetworkError.C3003">
            <summary>
            网络连接超时
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.AppError">
            <summary>
            程序错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.AppError.C4000">
            <summary>
            程序执行错误[未分类]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.AccessError">
            <summary>
            认证/权限错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.AccessError.C5000">
            <summary>
            认证错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.AccessError.C5001">
            <summary>
            认证错误[账号不存在]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.MessageError">
            <summary>
            报文错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.MessageError.C6000">
            <summary>
            报文错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.MessageError.C6001">
            <summary>
            缺少报文头
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.MessageError.C6002">
            <summary>
            请求报文头错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.MessageError.C6003">
            <summary>
            应答报文头错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.MessageError.C6004">
            <summary>
            协议版本错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.MessageError.C6005">
            <summary>
            未找到方法
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.MessageError.C6006">
            <summary>
            报文体错误
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.ConfigError">
            <summary>
            配置错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ConfigError.C7000">
            <summary>
            配置错误[未定义]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ConfigError.C7001">
            <summary>
            配置错误[接口地址未配置]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ConfigError.C7002">
            <summary>
            配置错误[帐号未配置]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ConfigError.C7003">
            <summary>
            配置错误[协议版本未配置]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.ConfigError.C7004">
            <summary>
            Ioc配置错误
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.ResponseCode.BusinessError">
            <summary>
            业务错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.ResponseCode.BusinessError.C8000">
            <summary>
            业务错误
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.RspCodeSuccess">
            <summary>
            请求成功
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeSuccess.C0000">
            <summary>
            请求处理成功
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeSuccess.C0001">
            <summary>
            请求处理成功[无预期结果]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.RspCodeParamError">
            <summary>
            参数错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeParamError.C1000">
            <summary>
            参数错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeParamError.C1001">
            <summary>
            参数错误[缺少参数]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeParamError.C1002">
            <summary>
            参数错误[类型错误]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeParamError.C1003">
            <summary>
            参数错误[范围错误]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.RspCodeDataError">
            <summary>
            数据错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeDataError.C2000">
            <summary>
            数据错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeDataError.C2001">
            <summary>
            连接数据库失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeDataError.C2002">
            <summary>
            添加失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeDataError.C2003">
            <summary>
            查询失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeDataError.C2004">
            <summary>
            更新失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeDataError.C2005">
            <summary>
            删除失败
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.RspCodeNetworkError">
            <summary>
            网络错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeNetworkError.C3000">
            <summary>
            网络错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeNetworkError.C3001">
            <summary>
            网络连接失败
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeNetworkError.C3002">
            <summary>
            拒绝访问[未授权] 
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeNetworkError.C3003">
            <summary>
            网络连接超时
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.RspCodeAppError">
            <summary>
            程序错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeAppError.C4000">
            <summary>
            程序执行错误[未分类]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.RspCodeAccessError">
            <summary>
            认证/权限错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeAccessError.C5000">
            <summary>
            认证错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeAccessError.C5001">
            <summary>
            认证错误[账号不存在]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.RspCodeMessageError">
            <summary>
            报文错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeMessageError.C6000">
            <summary>
            报文错误[未分类]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeMessageError.C6001">
            <summary>
            缺少报文头
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeMessageError.C6002">
            <summary>
            请求报文头错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeMessageError.C6003">
            <summary>
            应答报文头错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeMessageError.C6004">
            <summary>
            协议版本错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeMessageError.C6005">
            <summary>
            未找到方法
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeMessageError.C6006">
            <summary>
            报文体错误
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Enums.RspCodeConfigError">
            <summary>
            配置错误
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeConfigError.C7000">
            <summary>
            配置错误[未定义]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeConfigError.C7001">
            <summary>
            配置错误[接口地址未配置]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeConfigError.C7002">
            <summary>
            配置错误[帐号未配置]
            </summary>
        </member>
        <member name="F:TongCheng.SOA.Core.Enums.RspCodeConfigError.C7003">
            <summary>
            配置错误[协议版本未配置]
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ExceptionLogEntity">
            <summary>
            SOA异常日志
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.ComputerName">
            <summary>
            计算机名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.PhysicalPath">
            <summary>
            应用程序物理地址
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.CoreVersion">
            <summary>
            SOA核心类库版本
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.Exception">
            <summary>
            异常及信息
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.ExceptionStack">
            <summary>
            异常堆栈跟踪
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.InnerException">
            <summary>
            内部异常及信息
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.InnerExceptionStack">
            <summary>
            内部异常堆栈跟踪
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ExceptionLogEntity.Times">
            <summary>
            发生次数
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.ResponseHeaderEntity">
            <summary>
            响应报文头部实体
            实现IHeaderEntity接口
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.#ctor(System.Enum,System.String)">
            <summary>
            响应报文头
            </summary>
            <param name="rspCode">响应编码</param>
            <param name="rspDesc">响应说明</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.#ctor(System.String,System.String)">
            <summary>
            响应报文头
            </summary>
            <param name="rspCode">响应编码</param>
            <param name="rspDesc">响应说明</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.#ctor">
            <summary>
            响应报文头
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.InitSuccess(System.String)">
            <summary>
            初始化成功响应头
            Code=0000
            Desc=请求处理成功
            </summary>
            <param name="desc">响应说明，默认为[请求处理成功]</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.InitUnexpected(System.String)">
            <summary>
            初始化为请求处理成，但无预期结果
            code=0001
            desc=请求处理成功，无预期结果
            </summary>
            <param name="desc">响应说明</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.InitBusinessError(System.String)">
            <summary>
            初始化未业务错误
            code=8000
            </summary>
            <param name="desc">业务失败说明</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.InitByCode(System.Enum,System.String)">
            <summary>
            根据传入的<param name="code">响应码</param>初始化响应头
            </summary>
            <param name="code">响应码</param>
            <param name="desc">响应说明</param>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.RspCode">
            <summary>
            响应代码
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.RspDesc">
            <summary>
            响应说明
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.RspTime">
            <summary>
            响应时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.RspExceptionMessage">
            <summary>
            响应的错误描述
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.RspException">
            <summary>
            响应的错误
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.RspInnerExceptionMessage">
            <summary>
            响应错误[内部错误]描述
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.RspInnerException">
            <summary>
            响应错误[内部错误]
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.InterfaceProcessStart">
            <summary>
            接口处理开始
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.InterfaceProcessEnd">
            <summary>
            接口处理结束
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.DstSystemName">
            <summary>
            服务器机器名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.ResponseHeaderEntity.ReqUID">
            <summary>
            请求响应唯一标示
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Entities.LogServerDataEntity">
            <summary>
            请求验证实体
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Entities.LogServerDataEntity.#ctor">
            <summary>
            请求验证实体
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.LogServerDataEntity.ReqUID">
            <summary>
            请求唯一guid
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.LogServerDataEntity.ComputerName">
            <summary>
            请求服务器名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.LogServerDataEntity.ReqRcvdTime">
            <summary>
            接受到请求时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.LogServerDataEntity.RspSentTime">
            <summary>
            发送响应时间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.LogServerDataEntity.MethodName">
            <summary>
            方法名
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.LogServerDataEntity.Namespace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Entities.LogServerDataEntity.LogPriority">
            <summary>
            方法等级
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.Serialization.SerializerFactory">
            <summary>
            序列化工厂类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.SerializerFactory.ToSerialize(System.Object,TongCheng.SOA.Core.Utility.Serialization.SerializerType)">
            <summary>
            序列化为string
            默认为JSON
            </summary>
            <param name="obj">序列化的对象</param>
            <param name="type">string类型</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.SerializerFactory.ToObject(System.String,System.Type,TongCheng.SOA.Core.Utility.Serialization.SerializerType)">
            <summary>
            反序列化为对象
            </summary>
            <param name="objString"></param>
            <param name="objType"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.SerializerFactory.ToObject``1(System.String,TongCheng.SOA.Core.Utility.Serialization.SerializerType)">
            <summary>
            反序列化为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objString"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Config.SOAConfigHelper">
            <summary>
            SOA配置读取帮助类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Config.SOAConfigHelper.CheckCallerConfig">
            <summary>
            检验调用方soa配置文件
            抛出<exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">异常</exception>
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Config.SOAConfigHelper.CheckProviderConfig">
            <summary>
            检验提供方soa配置文件
            抛出<exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">异常</exception>
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.DynamicEntity.SOAEntityDynamicObject">
            <summary>
            SOA动态类型
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.SOAEntityDynamicObject.#ctor(System.Object)">
            <summary>
            初始化动态类型
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.SOAEntityDynamicObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            获取成员值
            </summary>
            <param name="binder"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="P:TongCheng.SOA.Core.DynamicEntity.SOAEntityDynamicObject.Item(System.String)">
            <summary>
            获取成员的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary">
            <summary>
            SOA实体数据字典类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.#ctor">
            <summary>
            SOA实体数据字典类
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            SOA实体数据字典类
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.TryGetValue(System.String,System.Object@)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.IsReadOnly">
            <summary>
            
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Keys">
            <summary>
            
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.DynamicEntity.EntityDataDictionary.Values">
            <summary>
            
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.Serialization.XmlSerializer">
            <summary>
            xml序列化与反序列化
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.XmlSerializer.GetXML(System.Object)">
            <summary>
            序列化为xml字符串
            </summary>
            <param name="obj">要序列化的对象</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.XmlSerializer.GetObject``1(System.String)">
            <summary>
            xml字符串反序列化为对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="jsonString">json字符串</param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.Serialization.XmlSerializer.GetObject(System.String,System.Type)">
            <summary>
            xml字符串反序列化为对象
            </summary>
            <param name="jsonString"></param>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Config.UrlConfig">
            <summary>
            接口地址配置
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.UrlConfig.NameSpace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:TongCheng.SOA.Core.Config.UrlConfig.Url">
            <summary>
            接口url
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Assert.SOADebugger.Assert``1(``0,System.Func{``0,System.Boolean},TongCheng.SOA.Core.Exceptions.SOAException)">
            <summary>
            根据<param name="conditionFunc">传入的判断方法</param>
            断言<param name="target">目标对象</param>
            如果断言为false<param name="exception">抛出异常</param>
            </summary>
            <typeparam name="T">目标对象类型</typeparam>
            <param name="target">目标对象</param>
            <param name="conditionFunc">传入的委托判断方法</param>
            <param name="exception">传入异常</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Assert.SOADebugger.Assert(System.Func{System.Boolean},TongCheng.SOA.Core.Exceptions.SOAException)">
            <summary>
            根据<param name="conditionFunc">传入的判断方法</param>
            如果断言为false <param name="exception">传入的异常 </param>
            </summary>
            <param name="conditionFunc">传入的委托判断方法</param>
            <param name="exception">传入的异常 </param>
        </member>
        <member name="M:TongCheng.SOA.Core.Assert.SOADebugger.AssertIsNull(System.Object,TongCheng.SOA.Core.Exceptions.SOAException)">
            <summary>
            断言<param name="target">目标对象</param>为null
            否则抛出<param name="exception">传入的异常 </param>
            </summary>
            <param name="target">目标对象</param>
            <param name="exception">传入的异常 </param>
        </member>
        <member name="M:TongCheng.SOA.Core.Assert.SOADebugger.AssertIsNotNull(System.Object,TongCheng.SOA.Core.Exceptions.SOAException)">
            <summary>
            断言<param name="target">目标对象</param>不为null
            否则抛出<param name="exception">传入的异常 </param>
            </summary>
            <param name="target">目标对象</param>
            <param name="exception">传入的异常 </param>
        </member>
        <member name="M:TongCheng.SOA.Core.Assert.SOADebugger.AssertIsNotNullOrWhiteSpace(System.String,TongCheng.SOA.Core.Exceptions.SOAException)">
            <summary>
            判断<param name="target">目标字符串</param>
            是否null或者空白字符
            断言成功抛出<param name="exception">传入的异常 </param>
            </summary>
            <param name="target">目标字符串</param>
            <param name="exception">传入的异常 </param>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.ModelAdapter.Transfer``1(System.Object)">
            <summary>
            转换数据为目标类型
            </summary>
            <typeparam name="T">目标类型</typeparam>
            <param name="data">被转换数据</param>
            <returns>转换为目标类型的结果</returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.ModelAdapter.GetElementType(System.Type)">
            <summary>
            获取集合类元素类型
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.ModelAdapter.CreateCollectionInstance(System.Type,System.Int32)">
            <summary>
            创建集合实例
            </summary>
            <param name="t"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.ModelAdapter.SetValues(System.Collections.ICollection,System.Object)">
            <summary>
            集合类赋值
            </summary>
            <param name="dataFrom"></param>
            <param name="dataTo"></param>
        </member>
        <member name="P:TongCheng.SOA.Core.Utility.ModelAdapter.Instance">
            <summary>
            调用实例
            </summary>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.IdentityGenerator">
            <summary>
            生成连续的GUID
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.IdentityGenerator.NewSequentialGuid">
            <summary>
            This algorithm generates secuential GUIDs across system boundaries, ideal for databases 
            </summary>
            <returns></returns>
        </member>
        <member name="T:TongCheng.SOA.Core.Utility.FileListener">
            <summary>
            文件修改监听器
            </summary>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.FileListener.CreateListener(System.IO.FileInfo,System.Action{System.String})">
            <summary>
            创建新的文件监听器
            </summary>
            <param name="file"></param>
            <param name="changedAction"></param>
        </member>
        <member name="M:TongCheng.SOA.Core.Utility.FileListener.#ctor(System.IO.FileInfo,System.Action{System.String})">
            <summary>
            初始化监听器
            </summary>
            <param name="file">要监听的文件</param>
            <param name="changedAction">处理文件的委托</param>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOARequesterImpl.SOARequester.#ctor(TongCheng.SOA.Core.Config.SOAIoCMethodConfig,TongCheng.SOA.Core.Entities.IRequestEntity,System.Type,TongCheng.SOA.Core.Entities.ESB.MonitorLogEntity)">
            <summary>
            实例化SOARequester
            </summary>
            <param name="methodConfig">方法配置</param>
            <param name="requestEntity">请求实体</param>
            <param name="responseEntityType">响应实体类型</param>
            <param name="log"></param>
            <exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">SOA异常</exception>
            <exception cref="T:System.Exception">其他异常</exception>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOARequesterImpl.SOARequester.#ctor(TongCheng.SOA.Core.Entities.RequestHeaderEntity,TongCheng.SOA.Core.Entities.IRequestEntity)">
            <summary>
            实例化SOARequester
            </summary>
            <param name="header">请求头</param>
            <param name="requestEntity">请求实体</param>
            <exception cref="T:TongCheng.SOA.Core.Exceptions.SOAException">SOA异常</exception>
            <exception cref="T:System.Exception">其他异常</exception>
        </member>
        <member name="M:TongCheng.SOA.Core.Requesting.SOARequesterImpl.SOARequester.GetResponse">
            <summary>
            获取响应
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
