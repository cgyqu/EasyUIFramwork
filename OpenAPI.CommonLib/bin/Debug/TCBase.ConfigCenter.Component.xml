<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TCBase.ConfigCenter.Component</name>
    </assembly>
    <members>
        <member name="M:TCBase.ConfigCenter.Component.Services.IConfigService.GetConfigStatus(System.Guid,System.Int64)">
            <summary>
            获取服务及配置状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Services.IConfigService.GetConfigStatus_V2(System.Guid,System.Int64)">
            <summary>
            获取服务及配置状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Services.IConfigService.AddConfig(System.Guid,System.String,System.String,System.String)">
            <summary>
            添加配置
            </summary>
            <param name="systemKey"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="tagKey"></param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Services.IConfigService.UpdateConfig(System.Guid,System.String,System.String)">
            <summary>
            修改配置
            </summary>
            <param name="systemKey"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Services.IConfigService.DeleteConfig(System.Guid,System.String)">
            <summary>
            删除配置
            </summary>
            <param name="systemKey"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Services.IConfigService.AddTag(System.Guid,System.String,System.String)">
            <summary>
            添加标签
            </summary>
            <param name="systemKey"></param>
            <param name="tagKey"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Services.IConfigService.UpdateTag(System.Guid,System.String,System.String)">
            <summary>
            修改标签
            </summary>
            <param name="systemKey"></param>
            <param name="tagKey"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Services.IConfigService.DeleteTag(System.Guid,System.String,System.Boolean)">
            <summary>
            删除标签
            </summary>
            <param name="systemKey"></param>
            <param name="tagKey"></param>
            <param name="setConfigToNoTag">删除标签之后是否将属于该标签的配置的设为无标签 </param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Utility.Serialization.GetXml(System.Object)">
            <summary>
            将对象序列化成XML格式
            </summary>
            <param name="target">要序列化的对象</param>
            <returns>序列化后的XML字符串</returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Utility.Serialization.GetObjFromXml``1(System.String)">
            <summary>
            将XML格式反序列化成对象
            </summary>
            <typeparam name="T">对象的类型</typeparam>
            <param name="xml">对象的XML字符串</param>
            <returns>反序列化的对象</returns>
        </member>
        <member name="P:TCBase.ConfigCenter.Component.Services.DataContracts.ConfigStatus.IsServiceUsable">
            <summary>
            服务的状态
            </summary>
        </member>
        <member name="P:TCBase.ConfigCenter.Component.Services.DataContracts.ConfigStatus.ModifiedConfig">
            <summary>
            变更过的配置
            </summary>
        </member>
        <member name="P:TCBase.ConfigCenter.Component.Services.DataContracts.ConfigStatus.ModifiedValueConfig">
            <summary>
            变更过的配置
            </summary>
        </member>
        <member name="P:TCBase.ConfigCenter.Component.Services.DataContracts.ConfigStatus.ConfigVersion">
            <summary>
            配置版本号
            </summary>
        </member>
        <member name="T:TCBase.ConfigCenter.Component.Services.DataContracts.Response`1">
            <summary>
            包装返回的数据，以及状态的描述
            </summary>
            <typeparam name="T">数据类型</typeparam>
        </member>
        <member name="P:TCBase.ConfigCenter.Component.Services.DataContracts.Response`1.Data">
            <summary>
            返回的数据
            </summary>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Services.ServiceAdapter.GetConfig(System.Guid)">
            <summary>
            读取项目所有配置
            </summary>
            <param name="systemKey">项目key</param>
            <returns></returns>
            <exception cref="T:System.Exception">wcf异常</exception>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Utility.XmlHelper.GetEntity``1(System.String)">
            <summary>
            把XML字符串转换为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Utility.XmlHelper.GetEntityFrom``1(System.String)">
            <summary>
            把XML文件串转换为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xmlFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Utility.XmlHelper.GetEntity(System.Xml.Linq.XElement,System.Type)">
            <summary>
            把XML元素转换为对象
            </summary>
            <param name="root"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.Utility.XmlHelper.GetEntityList(System.Xml.Linq.XElement,System.Type)">
            <summary>
            把XML元素转换为列表
            </summary>
            <param name="root"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:TCBase.ConfigCenter.Component.Utility.XmlHelper.GetEntityArray(System.Xml.Linq.XElement,System.Type)”忽略有格式错误的 XML 注释 -->
        <member name="M:TCBase.ConfigCenter.Component.TCConfigCenter.GetByTag(System.String)">
            <summary>
            通过配置的TagKey获取键值对列表
            </summary>
            <param name="tagKey">配置的TagKey</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.TCConfigCenter.Get(System.String)">
            <summary>
            通过<param name="key">配置的key</param>获取值
            </summary>
            <param name="key">配置的key</param>
            <returns></returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"></exception>
            <exception cref="T:System.NullReferenceException"></exception>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.TCConfigCenter.Get``1(System.String)">
            <summary>
            通过<param name="key">配置的key</param>获取具体的对象--------肖艳杰 2013.08.21
            </summary>
            <typeparam name="T">对象的类型</typeparam>
            <param name="key">配置的key</param>
            <returns>具体的对象</returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.TCConfigCenter.TryGet``1(System.String,``0)">
            <summary>
            通过key获取具体的对象,如果对象不存在,则用默认值代替--------肖艳杰 2013.08.21
            </summary>
            <typeparam name="T">要获取的对象类型</typeparam>
            <param name="key">关键字</param>
            <param name="defaultVal">默认值</param>
            <returns>具体的对象</returns>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.TCConfigCenter.TryGet``1(System.String,``0@)">
            <summary>
            通过key获取具体的对象,如果获取失败则返回false
            </summary>
            <typeparam name="T">要获取的对象类型</typeparam>
            <param name="key">关键字</param>
            <param name="config">具体的对象</param>
            <returns>是否获取成功</returns>
        </member>
        <member name="P:TCBase.ConfigCenter.Component.Configuration.ComponentConfigInfo.Instance">
            <summary>
            获取配置的单例
            </summary>
        </member>
        <member name="P:TCBase.ConfigCenter.Component.Configuration.ComponentConfigInfo.ServiceURI">
            <summary>
            服务uri
            </summary>
        </member>
        <member name="P:TCBase.ConfigCenter.Component.Configuration.ComponentConfigInfo.Account">
            <summary>
            账户
            </summary>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.ConfigCenterInitializer.Initialization">
            <summary>
            执行初始化
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">配置文件找不到</exception>
            <exception cref="T:System.Exception">配置错误</exception>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.ConfigCenterInitializer.InitHeartBeatThread">
            <summary>
            初始化心跳检测线程
            </summary>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.ConfigCenterInitializer.InitProjectConfig">
            <summary>
            初始化引用组件项目的配置
            </summary>
        </member>
        <member name="M:TCBase.ConfigCenter.Component.ConfigCenterInitializer.InitComponentConfig">
            <summary>
            初始化组件配置
            </summary>
        </member>
    </members>
</doc>
